import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{o as c,c as d,a as e,e as t,t as r,b as o,d as s,r as p}from"./app.3029a87b.js";const l={},u=s('<p>\u6293\u53D6\u6B65\u9AA4\uFF1Ahttps://newzone.top/_posts/2018-10-07-huginn_scraping_any_website.html</p><p><code>.env</code> \u8BBE\u7F6E\uFF1Ahttps://github.com/huginn/huginn/blob/master/.env.example</p><h2 id="\u5E38\u7528-agent" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528-agent" aria-hidden="true">#</a> \u5E38\u7528 Agent</h2><p>Huginn Agents\uFF1Ahttps://github.com/huginn/huginn/wiki/Agent-Types-&amp;-Descriptions</p><ul><li><p>Website Agent \u89E3\u6790\u7F51\u9875\u3001XML \u6587\u6863\u548C json \u6570\u636E\uFF0C\u6700\u5E38\u4F7F\u7528</p></li><li><p>Event Formatting Agent \u4E8B\u4EF6\u4FE1\u606F\u683C\u5F0F\u5316\uFF0C\u53EF\u4EE5\u5BF9\u6536\u5230\u7684\u4FE1\u606F\u5185\u5BB9\u8FDB\u884C\u683C\u5F0F\u5316\uFF0C\u5141\u8BB8\u6DFB\u52A0\u81EA\u5B9A\u4E49\u65B0\u5185\u5BB9</p></li><li><p>Phantom Js Cloud Agent \u501F\u52A9 Phantom \u6293\u53D6\u52A8\u6001\u9875\u9762\u6E90\u7801\uFF0C\u9632\u6B62\u90E8\u95E8\u7F51\u7AD9\u5C4F\u853D\u722C\u866B</p></li><li><p>Trigger Agent \u76D1\u63A7\u4E8B\u4EF6\u53CD\u9988\u4FE1\u606F\u7684\u89E6\u53D1\u5668\uFF0C\u591A\u7528\u6765\u8FC7\u6EE4\u90E8\u5206\u5185\u5BB9</p></li><li><p>De Duplicate Agent \u53BB\u91CD</p></li><li><p>Data Output Agent \u5C06\u6570\u636E\u4EE5 RSS \u548C Json \u7684\u5F62\u5F0F\u5411\u5916\u90E8\u63A8\u9001</p></li><li><p>Liquid Output Agent \u81EA\u5B9A\u4E49\u683C\u5F0F\u6570\u636E\u8F93\u51FA\uFF0C\u53EF\u4EE5\u7528\u5B83\u521B\u5EFA HTML \u9875\u9762\uFF0Cjson \u6570\u636E\u7B49</p></li><li><p>Webhook Agent</p></li><li><p>Javascript Agent \u5141\u8BB8\u6267\u884C\u81EA\u5B9A\u4E49\u7684 JS \u4EE3\u7801\uFF0C\u53EF\u4EE5\u7528\u4E8E\u4E2A\u6027\u5316\u64CD\u4F5C</p></li><li><p>Digest Agent \u6C47\u603B\u8282\u70B9\uFF0C\u6536\u96C6\u6240\u6709\u6536\u5230\u7684\u4E8B\u4EF6\u518D\u4F5C\u4E3A\u4E00\u4E2A\u4E8B\u4EF6\u53D1\u9001\u51FA\u53BB</p></li><li><p>Post Agent \u53EF\u4EE5\u7531\u5176\u4ED6\u8282\u70B9\u89E6\u53D1\uFF0C\u6839\u636E\u56FA\u5B9A\u6A21\u677F\u5408\u5E76\u4E8B\u4EF6\u4FE1\u606F\uFF0C\u5E76\u4EE5 POST \u6216 GET \u65B9\u5F0F\u5411\u6307\u5B9A\u7684 URL \u53D1\u8D77\u8BF7\u6C42</p></li><li><p>Delay Agent \u53EF\u4EE5\u4F5C\u4E3A\u4E8B\u4EF6\u6216\u8005\u526F\u672C\u7684\u6682\u5B58\u5668\u6216\u8005\u7F13\u51B2\u533A\uFF0C\u7EDF\u4E00\u89E6\u53D1\u53D1\u5E03</p></li><li><p>Scheduler Agent \u5B9A\u65F6\u5668\u8282\u70B9</p></li><li><p>Attribute Difference Agent \u6570\u503C\u5DEE\u5F02\u6BD4\u8F83</p></li><li><p>Commander Agent \u89E6\u53D1\u5668\u4EE3\u7406\uFF0C\u53EF\u4EE5\u7528\u4E8E\u5411\u5176\u4ED6\u8282\u70B9\u53D1\u8D77\u6307\u4EE4\u63A7\u5236\uFF0C\u63A7\u5236\u8282\u70B9\u7684\u6267\u884C\u548C\u505C\u6B62\u7B49</p></li></ul>',5),h=e("code",null,"+",-1),g=t("\uFF0C\u9700\u8981\u7528\u53CD\u4E49\u7B26"),_=e("code",null,"\\\\",-1),m=t("\u3002"),v=s(`<h2 id="huginn-\u88AB\u5361\u4F4F" tabindex="-1"><a class="header-anchor" href="#huginn-\u88AB\u5361\u4F4F" aria-hidden="true">#</a> Huginn \u88AB\u5361\u4F4F</h2><p>Huginn \u4EFB\u52A1\u6709\u65F6\u4F1A\u88AB\u5361\u4F4F\uFF0C\u540E\u7EED\u4EFB\u52A1\u90FD\u65E0\u6CD5\u8FDB\u884C\uFF0C\u9700\u8981\u91CD\u542F Huginn \u65B9\u53EF\u6062\u590D\u3002</p><p>\u56E0\u6B64\uFF0C\u6211\u5728 NAS \u7684\u4EFB\u52A1\u8BA1\u5212\u4E2D\u6DFB\u52A0\u4E86\u6BCF\u65E5\u8FD0\u884C\u7684\u811A\u672C\uFF0C\u6BCF\u5929 3 \u70B9\u4E00\u6B21\u5173\u95ED\u955C\u50CF huginn2mariadb \u548C huginn2022\uFF0C\u7136\u540E\u518D\u4F9D\u6B21\u542F\u52A8\u3002\u6CE8\u610F\u4E0D\u8981\u76F4\u63A5\u91CD\u542F Hungin Docker\uFF0C\u5426\u5219\u6570\u636E\u5E93\u4F1A\u5F02\u5E38\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> stop huginn2mariadb
<span class="token function">sleep</span> <span class="token number">10</span>
<span class="token function">sudo</span> <span class="token function">docker</span> stop huginn2022
<span class="token function">sleep</span> <span class="token number">10</span>
<span class="token function">sudo</span> <span class="token function">docker</span> start huginn2mariadb
<span class="token function">sleep</span> <span class="token number">10</span>
<span class="token function">sudo</span> <span class="token function">docker</span> start huginn2022
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u90E8\u7F72\u5728\u670D\u52A1\u5668\uFF0C\u5219\u53EF\u4F7F\u7528\u4E0B\u5217\u547D\u4EE4\u91CD\u542F\u670D\u52A1\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home/huginn/huginn
<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:force_stop
<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake prduction:export
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="agents" tabindex="-1"><a class="header-anchor" href="#agents" aria-hidden="true">#</a> Agents</h2><h3 id="trigger-agent" tabindex="-1"><a class="header-anchor" href="#trigger-agent" aria-hidden="true">#</a> Trigger Agent</h3><p>Trigger Agent \u6311\u9009\u7B26\u5408\u6761\u4EF6\u7684\u4E8B\u4EF6\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># content \u5B57\u6BB5\u4E2D\u4E0D\u5305\u542B \u5468\u96C5\u840C \u6216 \u9093\u96C5\u840C</span>
<span class="token punctuation">{</span>
  <span class="token key atrule">&quot;expected_receive_period_in_days&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;keep_event&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;rules&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token key atrule">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;!regex&quot;</span><span class="token punctuation">,</span>
      <span class="token key atrule">&quot;value&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\u5468\u96C5\u840C | \u9093\u96C5\u840C&quot;</span><span class="token punctuation">,</span>
      <span class="token key atrule">&quot;path&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;$.content&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Looks like your pattern matched in &#39;{{value}}&#39;!&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># title \u4E2D\u5305\u542B\u54C1\u724C\u8BCD iluminage \u6216 \u6613\u7F8E\u808C</span>
<span class="token punctuation">{</span>
  <span class="token key atrule">&quot;expected_receive_period_in_days&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;keep_event&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;rules&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token key atrule">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;regex&quot;</span><span class="token punctuation">,</span>
      <span class="token key atrule">&quot;value&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;iluminage|\u6613\u7F8E\u808C&quot;</span><span class="token punctuation">,</span>
      <span class="token key atrule">&quot;path&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;$.title&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Looks like your pattern matched in &#39;{{value}}&#39;!&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="liquid-output-agent" tabindex="-1"><a class="header-anchor" href="#liquid-output-agent" aria-hidden="true">#</a> Liquid Output Agent</h3><p>\u7528\u81EA\u5B9A\u4E49\u6A21\u677F\u5C06\u6570\u636E\u6574\u7406\uFF0C\u8F93\u51FA\u4E3A HTML\uFF0Cjson \u548C xml \u683C\u5F0F\u94FE\u63A5\u3002</p><p>\u6A21\u5F0F\u4E00\u822C\u9009 <code>Last X events</code>\uFF0C\u5C06\u63A5\u6536\u5230\u7684\u6240\u6709\u6570\u636E\u5BF9\u5916\u8F93\u51FA\uFF0C\u9ED8\u8BA4\u4E3A 1000\u3002</p><p><code>Last X events</code> \u6A21\u5F0F\u4E0B\uFF0C\u53EF\u4EE5\u8BBE\u7F6E <code>Event limit</code> \u4EE5\u63A7\u5236\u8F93\u51FA\u6570\u636E\u7684\u6570\u91CF\u548C\u65F6\u95F4\u6BB5\u3002<code>Event limit</code> \u53EF\u4EE5\u8BBE\u4E3A 100\uFF0C\u5373\u8F93\u51FA\u6570\u636E\u4E3A 100\uFF1B\u4E5F\u53EF\u4EE5\u8BBE\u4E3A\u300C1 day\u300D\u6216\u300C5 minutes\u300D\uFF0C\u5373\u4EC5\u8F93\u51FA\u6700\u8FD1\u4E00\u5929\u7684\u5185\u5BB9\u3002</p><h3 id="event-formatting-agent" tabindex="-1"><a class="header-anchor" href="#event-formatting-agent" aria-hidden="true">#</a> Event Formatting Agent</h3>`,15),f=t("Event Formatting Agent \u5141\u8BB8\u60A8\u683C\u5F0F\u5316\u4F20\u5165\u7684\u4E8B\u4EF6\uFF0C\u6839\u636E\u9700\u8981\u6DFB\u52A0\u65B0\u7684\u5B57\u6BB5\u3002\u53EF\u4EE5\u7528\u6B63\u5219\u6765\u66FF\u6362\u8F93\u5165\u4E2D\u7684\u67D0\u4E9B\u5143\u7D20\u3002\u5177\u4F53\u6837\u4F8B\u53C2\u8003\uFF0C"),k={href:"http://huginnio.herokuapp.com/scenarios/14/download",target:"_blank",rel:"noopener noreferrer"},b=t("\u65B0\u4EAC\u62A5 #5 \u6E05\u7406\u7248\u9762\u5B57\u6BB5\u683C\u5F0F"),y=t("\u3002"),q=s(`<h4 id="\u6B63\u5219\u91CD\u6784" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u91CD\u6784" aria-hidden="true">#</a> \u6B63\u5219\u91CD\u6784</h4><p>\u6BD4\u5982\u751F\u6210\u65F6\u95F4\u89C4\u5219\u4E3A <code>&quot;created_at&quot;: &quot;{{created_at}}&quot;</code>\uFF0C\u9ED8\u8BA4\u65F6\u95F4 <code>2022-07-06 21:09:51 +0800</code>\uFF0C\u4F7F\u7528\u6B63\u5219\u5220\u9664\u89C4\u5219\u4E3A <code>&quot;created_at&quot;: &quot;{{created_at | regex_replace: &#39; &#39;, &#39;&#39;| regex_replace: &#39;(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?&#39;, &#39;&#39;| regex_replace: &#39;\\\\+0800&#39;, &#39;&#39;}}&quot;</code>\u3002</p><h4 id="\u52A0\u524D\u540E\u7F00" tabindex="-1"><a class="header-anchor" href="#\u52A0\u524D\u540E\u7F00" aria-hidden="true">#</a> \u52A0\u524D\u540E\u7F00</h4><p>\u6293\u53D6\u94FE\u63A5\u4E0D\u5B8C\u6574\u65F6\uFF0C\u9700\u8981\u5B8C\u5584\u94FE\u63A5\uFF0C\u6BD4\u5982 <code>&quot;url_link&quot;: &quot;https://so.toutiao.com{{temp_link}}&quot;</code>\u3002</p><p>For example, here is a possible Event:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">{</span>
  <span class="token key atrule">&quot;high&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">&quot;celsius&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;fahreinheit&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;64&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;date&quot;</span><span class="token punctuation">:</span>
    <span class="token punctuation">{</span> <span class="token key atrule">&quot;epoch&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1357959600&quot;</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;pretty&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;10:00 PM EST on January 11, 2013&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;conditions&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Rain showers&quot;</span><span class="token punctuation">,</span>
  <span class="token key atrule">&quot;data&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;This is some data&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You may want to send this event to another Agent, for example a Twilio Agent, which expects a <code>message</code> key. You can use an Event Formatting Agent\u2019s <code>instructions</code> setting to do this in the following way:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{data}}&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{created_at}}&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Names here like <code>conditions</code>, <code>high</code> and <code>data</code> refer to the corresponding values in the Event hash.</p><p>The special key <code>created_at</code> refers to the timestamp of the Event, which can be reformatted by the <code>date</code> filter, like <code>{{created_at | date:&quot;at %I:%M %p&quot; }}</code>.</p><p>The upstream agent of each received event is accessible via the key <code>agent</code>, which has the following attributes: <code>name</code>, <code>options</code>, <code>sources</code>, <code>type</code>, <code>url</code>, <code>id</code>, <code>disabled</code>, <code>memory</code>, <code>controllers</code>, <code>schedule</code>, <code>keep_events_for</code>, <code>propagate_immediately</code>, <code>working</code>, <code>receivers</code>, <code>control_targets</code>.</p>`,11),w=t("Have a look at the "),x={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},A=t("Wiki"),S=t(" to learn more about liquid templating."),E=s(`<p>Events generated by this possible Event Formatting Agent will look like:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like Rain showers with a high temperature of 18 degrees Celsius.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;This is some data&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In <code>matchers</code> setting you can perform regular expression matching against contents of events and expand the match data for use in <code>instructions</code> setting. Here is an example:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;matchers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{date.pretty}}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A(?&lt;time&gt;dd:dd [AP]M [A-Z]+)&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pretty_date&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This virtually merges the following hash into the original event hash:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;pretty_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;0&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST on January 11, 2013&quot;</span>
  <span class="token property">&quot;1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So you can use it in <code>instructions</code> like this:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius according to the forecast at {{pretty_date.time}}.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{data}}&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to retain original contents of events and only add new keys, then set <code>mode</code> to <code>merge</code>, otherwise set it to <code>clean</code>.</p><p>To CGI escape output (for example when creating a link), use the Liquid <code>uri_escape</code> filter, like so:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A peak was on Twitter in {{group_by}}.  Search: https://twitter.com/search?q={{group_by | uri_escape}}&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="adioso-agent-\u673A\u7968\u4EF7\u683C\u8FFD\u8E2A" tabindex="-1"><a class="header-anchor" href="#adioso-agent-\u673A\u7968\u4EF7\u683C\u8FFD\u8E2A" aria-hidden="true">#</a> Adioso Agent - \u673A\u7968\u4EF7\u683C\u8FFD\u8E2A</h3><p><code>Creates events</code></p>`,14),T=t("Adioso Agent \u53EF\u4EE5\u67E5\u8BE2\u4E24\u4E2A\u57CE\u5E02\u95F4\uFF0C\u5728\u6307\u5B9A\u65F6\u95F4\u5185\u7684\u6700\u4F4E\u98DE\u673A\u7968\u4EF7\u683C\u3002\u673A\u7968\u4EF7\u683C\u8D27\u5E01\u662F\u7F8E\u5143\u3002\u67E5\u8BE2\u65E5\u671F "),C=e("code",null,"start_date",-1),D=t(" \u548C "),L=e("code",null,"end_date",-1),R=t(" \u4E4B\u95F4\u7684\u5DEE\u5F02\u9700\u5C0F\u4E8E 150 \u5929\u3002\u9700\u8981\u6CE8\u518C "),j={href:"http://adioso.com/",target:"_blank",rel:"noopener noreferrer"},F=t("Adioso"),P=t("\uFF0C\u5E76\u5728 "),I=e("code",null,"username",-1),O=t(" and "),N=e("code",null,"password",-1),B=t(" \u4E2D\u8F93\u5165\u3002"),H=s('<hr><h3 id="aftership-agent-\u7269\u6D41\u8FFD\u8E2A-api-\u4ED8\u8D39" tabindex="-1"><a class="header-anchor" href="#aftership-agent-\u7269\u6D41\u8FFD\u8E2A-api-\u4ED8\u8D39" aria-hidden="true">#</a> Aftership Agent - \u7269\u6D41\u8FFD\u8E2A-API \u4ED8\u8D39</h3><p><code>Creates events</code></p><p>Aftership agent \u5E2E\u52A9\u4F60\u8FFD\u8E2A\u4F60\u7684\u5FEB\u9012\uFF0C\u5E76\u5B9E\u65F6\u66F4\u65B0\u5305\u88F9\u52A8\u6001\u3002\u4E3A\u4E86\u80FD\u591F\u4F7F\u7528 Aftership API\uFF0C\u60A8\u9700\u8981\u751F\u6210\u4E00\u4E2A <code>API Key</code>\u3002\u8FD9\u9700\u8981\u4ED8\u8D39\u624D\u80FD\u4F7F\u7528\u5176\u8DDF\u8E2A\u529F\u80FD\u3002</p><p>\u64CD\u4F5C\u8BF4\u660E\uFF1A Provide the <code>path</code> for the API endpoint that you\u2019d like to hit. For example, for all active packages, enter <code>trackings</code> (see https://www.aftership.com/docs/api/4/trackings), for a specific package, use <code>trackings/SLUG/TRACKING_NUMBER</code> and replace <code>SLUG</code> with a courier code and <code>TRACKING_NUMBER</code> with the tracking number. You can request last checkpoint of a package by providing <code>last_checkpoint/SLUG/TRACKING_NUMBER</code> instead.</p><p>You can get a list of courier information here <code>https://www.aftership.com/courier</code></p><p>Required Options:</p><ul><li><code>api_key</code> - YOUR_API_KEY.</li><li><code>path request and its full path</code></li></ul><hr><h3 id="algorithmia-agent-ai-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#algorithmia-agent-ai-\u7B97\u6CD5" aria-hidden="true">#</a> Algorithmia Agent - AI \u7B97\u6CD5</h3>',10),U=e("code",null,"Creates events",-1),M=t(),Y=e("code",null,"Receives events",-1),V=t(),W=e("code",null,"Dry runs",-1),J={href:"http://huginnio.herokuapp.com/agent_gems#huginn_algorithmia_agent",target:"_blank",rel:"noopener noreferrer"},G=t("huginn_algorithmia_agent"),z=t("AlgoritmiaAgent \u8FD0\u884C Algorithmia \u4E2D\u7684\u7B97\u6CD5\u3002\u5728\u4F7F\u7528\u6B64\u4EE3\u7406\u4E4B\u524D\uFF0C\u60A8\u9700\u8981\u6CE8\u518C\u4E00\u4E2A"),K={href:"https://algorithmia.com",target:"_blank",rel:"noopener noreferrer"},Q=t("Algorithmia"),X=t("\u5E10\u6237\u3002"),$=s('<p>The created event will have the output from Algorithmia in the <code>result</code> key. To merge incoming Events with the result, use <code>merge</code> for the <code>mode</code> key.</p><hr><h3 id="attribute-difference-agent-\u5C5E\u6027\u5DEE\u5F02-\u5F85\u6DF1\u5165\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#attribute-difference-agent-\u5C5E\u6027\u5DEE\u5F02-\u5F85\u6DF1\u5165\u7406\u89E3" aria-hidden="true">#</a> Attribute Difference Agent - \u5C5E\u6027\u5DEE\u5F02\uFF08\u5F85\u6DF1\u5165\u7406\u89E3\uFF09</h3><p><code>Creates events</code> <code>Receives events</code></p><p>The Attribute Difference Agent receives events and emits a new event with the difference or change of a specific attribute in comparison to the previous event received. Attribute Difference Agent \u7528\u4E8E\u4F20\u9012\u4E24\u4E2A\u4E0D\u540C\u503C\u7684\u5DEE\u5F02\u548C\u6539\u53D8\u3002</p><p><code>path</code> specifies the JSON path of the attribute to be used from the event.</p><p><code>output</code> specifies the new attribute name that will be created on the original payload and it will contain the difference or change.</p><p><code>method</code> specifies if it should be\u2026</p><ul><li><code>percentage_change</code> eg. Previous value was <code>160</code>, new value is <code>116</code>. Percentage change is <code>-27.5</code></li><li><code>decimal_difference</code> eg. Previous value was <code>5.5</code>, new value is <code>15.2</code>. Difference is <code>9.7</code></li><li><code>integer_difference</code> eg. Previous value was <code>50</code>, new value is <code>40</code>. Difference is <code>-10</code></li></ul><p><code>decimal_precision</code> defaults to <code>3</code>, but you can override this if you want.</p><p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><p>The resulting event will be a copy of the received event with the difference or change added as an extra attribute. If you use the <code>percentage_change</code> the attribute will be formatted as such <code>{{attribute}}_change</code>, otherwise it will be <code>{{attribute}}_diff</code>.</p><p>All configuration options will be liquid interpolated based on the incoming event.</p><hr><h3 id="basecamp-agent-service-\u505C\u7528" tabindex="-1"><a class="header-anchor" href="#basecamp-agent-service-\u505C\u7528" aria-hidden="true">#</a> <s>Basecamp Agent - Service \u505C\u7528</s></h3><p><code>Creates events</code> <code>37signals</code></p><p>The Basecamp Agent checks a Basecamp project for new Events</p>',17),Z=t("To be able to use this Agent you need to authenticate with 37signals in the "),ee={href:"http://huginnio.herokuapp.com/services",target:"_blank",rel:"noopener noreferrer"},te=t("Services"),ne=t(" section first."),oe=e("hr",null,null,-1),se=e("h3",{id:"bigquery-agent-\u5927\u578B\u6570\u636E\u5E93\u5206\u6790",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bigquery-agent-\u5927\u578B\u6570\u636E\u5E93\u5206\u6790","aria-hidden":"true"},"#"),t(" Bigquery Agent - \u5927\u578B\u6570\u636E\u5E93\u5206\u6790")],-1),ae=e("code",null,"Creates events",-1),ie=t(),ce=e("code",null,"Receives events",-1),de=t(),re=e("code",null,"Dry runs",-1),pe={href:"http://huginnio.herokuapp.com/agent_gems#huginn_bigquery_agent",target:"_blank",rel:"noopener noreferrer"},le=t("huginn_bigquery_agent"),ue=e("p",null,"Bigquery Agent \u4F1A\u8C03\u7528 Google BigQuery \u548C Goolge Cloud \u8D26\u6237\uFF0C\u53EF\u80FD\u9700\u8981\u4ED8\u8D39\u3002\u540C\u65F6\uFF0CBigquery Agent \u4F9D\u9760\u670D\u52A1\u5E10\u6237\u8FDB\u884C\u8EAB\u4EFD\u9A8C\u8BC1\uFF0C\u800C\u4E0D\u662F oauth\u3002",-1),he=e("p",null,"Setup:",-1),ge=t("Visit "),_e={href:"https://code.google.com/apis/console/b/0/",target:"_blank",rel:"noopener noreferrer"},me=t("the google api console"),ve=e("li",null,"Use your existing project (or create a new one)",-1),fe=e("li",null,"APIs & Auth -> Enable BigQuery",-1),ke=e("li",null,"Credentials -> Create new Client ID -> Service Account",-1),be=e("li",null,[t("Download the JSON keyfile and either save it to a path, ie: "),e("code",null,"/home/huginn/Huginn-5d12345678cd.json"),t(", or copy the value of "),e("code",null,"private_key"),t(" from the file.")],-1),ye=e("li",null,"Grant that service account access to the BigQuery datasets and tables you want to query.",-1),qe=s(`<p>The JSON keyfile you downloaded earlier should look like this:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;service_account&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;project_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;huginn-123123&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;private_key_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6d6b476fc6ccdb31e0f171991e5528bb396ffbe4&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;private_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;client_email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;huginn@huginn-123123.iam.gserviceaccount.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123123...123123&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;auth_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://accounts.google.com/o/oauth2/auth&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;token_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://accounts.google.com/o/oauth2/token&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;auth_provider_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.googleapis.com/oauth2/v1/certs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;client_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.googleapis.com/robot/v1/metadata/x509/huginn%40huginn-123123.iam.gserviceaccount.com&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Agent Configuration:</p><p><code>project_id</code> - The id of the Google Cloud project.</p>`,4),we=e("code",null,"query",-1),xe=t(" - The BigQuery query to run. "),Ae={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Se=t("Liquid"),Ee=t(" formatting is supported to run queries based on receiving events."),Te=e("p",null,[e("code",null,"use_legacy"),t(" - Whether or not to use BigQuery legacy SQL or standard SQL. (Defaults to "),e("code",null,"false"),t(")")],-1),Ce=e("code",null,"max",-1),De=t(" - Maximum number of rows to return. Defaults to unlimited, but results are always "),Le={href:"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud-bigquery/v0.27.0/google/cloud/bigquery/project",target:"_blank",rel:"noopener noreferrer"},Re=t("limited to 10 MB"),je=t("."),Fe=s("<p><code>timeout</code> - How long to wait for query to complete (in ms). Defaults to <code>10000</code>.</p><p><code>event_per_row</code> - Whether to create one Event per row returned, or one event with all rows as <code>results</code>. Defaults to <code>false</code>.</p><p><strong>Authorization</strong></p><p><code>keyfile</code> - (String) The path (relative to where Huginn is running) to the JSON keyfile downloaded in step 5 above.</p><p>Alternately, <code>keyfile</code> can be a hash:</p>",5),Pe=e("code",null,"keyfile",-1),Ie=t(),Oe=e("code",null,"private_key",-1),Ne=t(" - The private key (value of "),Be=e("code",null,"private_key",-1),He=t(" from the downloaded file). "),Ue={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Me=t("Liquid"),Ye=t(" formatting is supported if you want to use a Credential. (E.g., "),Ve=e("code",null,"{% credential google-bigquery-key %}",-1),We=t(")"),Je=s('<p><code>keyfile</code> <code>client_email</code> - The value of <code>client_email</code> from the downloaded file. Same as the service account email.</p><hr><h3 id="boxcar-agent-iphone-\u901A\u77E5\u680F-app" tabindex="-1"><a class="header-anchor" href="#boxcar-agent-iphone-\u901A\u77E5\u680F-app" aria-hidden="true">#</a> <s>Boxcar Agent - iPhone \u901A\u77E5\u680F app</s></h3><p><code>Receives events</code></p><p>Boxcar agent \u4F1A\u5728 iPhone \u63A8\u9001\u901A\u77E5\uFF0C\u4F46\u5176\u4E0D\u517C\u5BB9\u4E8E iOS 10 \u7CFB\u7EDF\uFF0C\u5DF2\u7ECF\u505C\u6B62\u66F4\u65B0\u3002</p><p>To be able to use the Boxcar end-user API, you need your <code>Access Token</code>. The access token is available on general \u201CSettings\u201D screen of Boxcar iOS app or from Boxcar Web Inbox settings page.</p><p>Please provide your access token in the <code>user_credentials</code> option. If you\u2019d like to use a credential, set the <code>user_credentials</code> option to <code>{% credential CREDENTIAL_NAME %}</code>.</p><p>Options:</p><ul><li><code>user_credentials</code> - Boxcar access token.</li><li><code>title</code> - Title of the message.</li><li><code>body</code> - Body of the message.</li><li><code>source_name</code> - Name of the source of the message. Set to <code>Huginn</code> by default.</li><li><code>icon_url</code> - URL to the icon.</li><li><code>sound</code> - Sound to be played for the notification. Set to \u2018bird-1\u2019 by default.</li></ul><hr><h3 id="change-detector-agent-\u76D1\u6D4B\u6570\u636E\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#change-detector-agent-\u76D1\u6D4B\u6570\u636E\u53D8\u5316" aria-hidden="true">#</a> Change Detector Agent - \u76D1\u6D4B\u6570\u636E\u53D8\u5316</h3><p><code>Creates events</code> <code>Receives events</code></p><p>The Change Detector Agent receives a stream of events and emits a new event when a property of the received event changes. Change Detector Agent \u4F1A\u63A5\u6536\u6570\u636E\u6D41\u5185\u5BB9\uFF0C\u5E76\u5728\u76D1\u6D4B\u5230\u6570\u636E\u5C5E\u6027\u6539\u53D8\u540E\uFF0C\u4F20\u9012\u51FA\u65B0\u4E8B\u4EF6\u3002</p>',13),Ge=e("code",null,"property",-1),ze=t(" specifies a "),Ke={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Qe=t("Liquid"),Xe=t(" template that expands to the property to be watched, where you can use a variable "),$e=e("code",null,"last_property",-1),Ze=t(" for the last property value. If you want to detect a new lowest price, try this: "),et=e("code",null,"{% assign drop = last_property | minus: price %}{% if last_property == blank or drop > 0 %}{{ price | default: last_property }}{% else %}{{ last_property }}{% endif %}",-1),tt=s('<p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><p>The resulting event will be a copy of the received event.</p><hr><h3 id="commander-agent-\u89E6\u53D1\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#commander-agent-\u89E6\u53D1\u547D\u4EE4" aria-hidden="true">#</a> Commander Agent - \u89E6\u53D1\u547D\u4EE4</h3><p><code>Receives events</code> <code>Controls agents</code></p><p>Commander Agent \u7531\u65F6\u95F4\u8868\u6216\u4F20\u5165\u4E8B\u4EF6\u89E6\u53D1\uFF0C\u5E76\u89E6\u53D1\u5176\u4ED6 agents \u8FD0\u884C\uFF0C\u7981\u7528\uFF0C\u914D\u7F6E\u6216\u542F\u7528\u81EA\u5DF1\u3002</p><p><strong>Action types</strong></p><p>Set <code>action</code> to one of the action types below:</p><ul><li><p><code>run</code>: Target Agents are run when this agent is triggered.</p></li><li><p><code>disable</code>: Target Agents are disabled (if not) when this agent is triggered.</p></li><li><p><code>enable</code>: Target Agents are enabled (if not) when this agent is triggered.</p></li><li><p><code>configure</code>: Target Agents have their options updated with the contents of <code>configure_options</code>.</p></li></ul>',9),nt=t("Here\u2019s a tip: you can use "),ot={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},st=t("Liquid"),at=t(" templating to dynamically determine the action type. For example:"),it=s('<ul><li><p>To create a CommanderAgent that receives an event from a WeatherAgent every morning to kick an agent flow that is only useful in a nice weather, try this: <code>{% if conditions contains &#39;Sunny&#39; or conditions contains &#39;Cloudy&#39; %}</code> <code>run{% endif %}</code></p></li><li><p>Likewise, if you have a scheduled agent flow specially crafted for rainy days, try this: <code>{% if conditions contains &#39;Rain&#39; %}enable{% else %}disabled{% endif %}</code></p></li><li><p>If you want to update a WeatherAgent based on a UserLocationAgent, you could use <code>&#39;action&#39;: &#39;configure&#39;</code> and set \u2018configure*options\u2019 to <code>{ &#39;location&#39;: &#39;{{\\_location*.latlng}}&#39; }</code>.</p></li><li><p>In templating, you can use the variable <code>target</code> to refer to each target agent, which has the following attributes: <code>name</code>, <code>options</code>, <code>sources</code>, <code>type</code>, <code>url</code>, <code>id</code>, <code>disabled</code>, <code>memory</code>, <code>controllers</code>, <code>schedule</code>, <code>keep_events_for</code>, <code>propagate_immediately</code>, <code>working</code>, <code>receivers</code>, and <code>control_targets</code>.</p></li></ul><p><strong>Targets</strong></p><p>Select Agents that you want to control from this CommanderAgent.</p><hr><h3 id="csv-agent-csv-\u8868\u683C\u6570\u636E\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#csv-agent-csv-\u8868\u683C\u6570\u636E\u5904\u7406" aria-hidden="true">#</a> Csv Agent - CSV \u8868\u683C\u6570\u636E\u5904\u7406</h3><p><code>Creates events</code> <code>Receives events</code> <code>Consumes file pointer</code></p><p>CsvAgent \u53EF\u4EE5\u89E3\u6790\u6216\u91CD\u6784 CSV \u8868\u683C\u6570\u636E\u3002\u89E3\u6790\u65F6\uFF0C\u53EF\u4EE5\u9488\u5BF9\u6574\u4E2A CSV\uFF0C\u4E5F\u53EF\u4EE5\u5355\u72EC\u5904\u7406\u4E00\u884C\u6570\u636E\u3002</p><p>Set <code>mode</code> to <code>parse</code> to parse CSV from incoming event, when set to <code>serialize</code> the agent serilizes the data of events to CSV.</p><p><strong>Universal options</strong></p><p>Specify the <code>separator</code> which is used to seperate the fields from each other (default is <code>,</code>).</p><p><code>data_key</code> sets the key which contains the serialized CSV or parsed CSV data in emitted events.</p><p><strong>Parsing</strong></p><p>If <code>use_fields</code> is set to a comma seperated string and the CSV file contains field headers the agent will only extract the specified fields.</p><p><code>output</code> determines wheather one event per row is emitted or one event that includes all the rows.</p><p>Set <code>with_header</code> to <code>true</code> if first line of the CSV file are field names.</p>',15),ct=t("This agent can consume a \u2018file pointer\u2019 event from the following agents with no additional configuration: "),dt=e("code",null,"FtpsiteAgent",-1),rt=t(", "),pt=e("code",null,"LocalFileAgent",-1),lt=t(", "),ut=e("code",null,"S3Agent",-1),ht=t(". Read more about the concept in the "),gt={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},_t=t("wiki"),mt=t("."),vt=t("When receiving the CSV data in a regular event use "),ft={href:"http://goessner.net/articles/JsonPath/",target:"_blank",rel:"noopener noreferrer"},kt=t("JSONPath"),bt=t(" to select the path in "),yt=e("code",null,"data_path",-1),qt=t(". "),wt=e("code",null,"data_path",-1),xt=t(" is only used when the received event does not contain a \u2018file pointer\u2019."),At=e("p",null,[e("strong",null,"Serializing")],-1),St=e("p",null,[t("If "),e("code",null,"use_fields"),t(" is set to a comma seperated string and the first received event has a object at the specified "),e("code",null,"data_path"),t(" the generated CSV will only include the given fields.")],-1),Et=e("p",null,[t("Set "),e("code",null,"with_header"),t(" to "),e("code",null,"true"),t(" to include a field header in the CSV.")],-1),Tt=t("Use "),Ct={href:"http://goessner.net/articles/JsonPath/",target:"_blank",rel:"noopener noreferrer"},Dt=t("JSONPath"),Lt=t(" in "),Rt=e("code",null,"data_path",-1),jt=t(" to select with part of the received events should be serialized."),Ft=s('<hr><h3 id="data-output-agent-\u7F51\u9875\u8F93\u51FA\u6570\u636E-rss" tabindex="-1"><a class="header-anchor" href="#data-output-agent-\u7F51\u9875\u8F93\u51FA\u6570\u636E-rss" aria-hidden="true">#</a> Data Output Agent - \u7F51\u9875\u8F93\u51FA\u6570\u636E\uFF08RSS\uFF09</h3><p><code>Receives events</code></p><p>Data Output Agent \u5C06\u4F20\u5165\u7684\u6570\u636E\u8F93\u5165\u4E3A RSS \u6216 JSON\uFF0C\u5177\u4F53\u683C\u5F0F\u4E3A\u201C.xml\u201D\u6216\u201C.json\u201D\u3002</p><p>This Agent will output data at:</p><p><code>https:///users/1/web_requests/:id/:secret.xml</code></p><p>where <code>:secret</code> is one of the allowed secrets specified in your options and the extension can be <code>xml</code> or <code>json</code>.</p><p>You can setup multiple secrets so that you can individually authorize external systems to access your Huginn data.</p><p>Options:</p>',9),Pt=e("li",null,[e("code",null,"secrets"),t(" - An array of tokens that the requestor must provide for light-weight authentication.")],-1),It=e("li",null,[e("code",null,"expected_receive_period_in_days"),t(" - How often you expect data to be received by this Agent from other Agents.")],-1),Ot=e("code",null,"template",-1),Nt=t(" - A JSON object representing a mapping between item output keys and incoming event values. Use "),Bt={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Ht=t("Liquid"),Ut=s(" to format the values. Values of the <code>link</code>, <code>title</code>, <code>description</code> and <code>icon</code> keys will be put into the <code>&lt;channel&gt;</code> section of RSS output. Value of the <code>self</code> key will be used as URL for this feed itself, which is useful when you serve it via reverse proxy. The <code>item</code> key will be repeated for every Event. The <code>pubDate</code> key for each item will have the creation time of the Event unless given.",17),Mt=e("li",null,[e("code",null,"events_to_show"),t(" - The number of events to output in RSS or JSON. (default: "),e("code",null,"40"),t(")")],-1),Yt=e("li",null,[e("code",null,"ttl"),t(" - A value for the "),e("code",null,"<ttl>"),t(" element in RSS output. (default: "),e("code",null,"60"),t(")")],-1),Vt=e("code",null,"ns_media",-1),Wt=t(" - Add "),Jt={href:"https://en.wikipedia.org/wiki/Media_RSS",target:"_blank",rel:"noopener noreferrer"},Gt=t("yahoo media namespace"),zt=t(" in output xml"),Kt=e("code",null,"ns_itunes",-1),Qt=t(" - Add "),Xt={href:"http://lists.apple.com/archives/syndication-dev/2005/Nov/msg00002.html",target:"_blank",rel:"noopener noreferrer"},$t=t("itunes compatible namespace"),Zt=t(" in output xml"),en=e("li",null,[e("code",null,"rss_content_type"),t(" - Content-Type for RSS output (default: "),e("code",null,"application/rss+xml"),t(")")],-1),tn=e("li",null,[e("code",null,"response_headers"),t(" - An object with any custom response headers. (example: "),e("code",null,'{"Access-Control-Allow-Origin": "*"}'),t(")")],-1),nn=e("code",null,"push_hubs",-1),on=t(" - Set to a list of PubSubHubbub endpoints you want to publish an update to every time this agent receives an event. (default: none) Popular hubs include "),sn={href:"https://pubsubhubbub.superfeedr.com/",target:"_blank",rel:"noopener noreferrer"},an=t("Superfeedr"),cn=t(" and "),dn={href:"https://pubsubhubbub.appspot.com/",target:"_blank",rel:"noopener noreferrer"},rn=t("Google"),pn=t(". Note that publishing updates will make your feed URL known to the public, so if you want to keep it secret, set up a reverse proxy to serve your feed via a safe URL and specify it in "),ln=e("code",null,"template.self",-1),un=t("."),hn=s(`<p>If you\u2019d like to output RSS tags with attributes, such as <code>enclosure</code>, use something like the following in your <code>template</code>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;enclosure&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;_attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{media_url}}&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234456789&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;audio/mpeg&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token property">&quot;another_tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;_attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;another_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another_value&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_contents&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag contents (can be an object for nesting)&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Ordering events</strong></p><p>To specify the order of events, set <code>events_order</code> to an array of sort keys, each of which looks like either <code>expression</code> or <code>[expression, type, descending]</code>, as described as follows:</p><ul><li><p><em>expression</em> is a Liquid template to generate a string to be used as sort key.</p></li><li><p><em>type</em> (optional) is one of <code>string</code> (default), <code>number</code> and <code>time</code>, which specifies how to evaluate <em>expression</em> for comparison.</p></li><li><p><em>descending</em> (optional) is a boolean value to determine if comparison should be done in descending (reverse) order, which defaults to <code>false</code>.</p></li></ul><p>Sort keys listed earlier take precedence over ones listed later. For example, if you want to sort articles by the date and then by the author, specify <code>[[&quot;{{date}}&quot;, &quot;time&quot;], &quot;{{author}}&quot;]</code>.</p><p>Sorting is done stably, so even if all events have the same set of sort key values the original order is retained. Also, a special Liquid variable <code>_index_</code> is provided, which contains the zero-based index number of each event, which means you can exactly reverse the order of events by specifying <code>[[&quot;{{_index_}}&quot;, &quot;number&quot;, true]]</code>.</p><p>DataOutputAgent will select the last <code>events_to_show</code> entries of its received events sorted in the order specified by <code>events_order</code>, which is defaulted to the event creation time. So, if you have multiple source agents that may create many events in a run, you may want to either increase <code>events_to_show</code> to have a larger \u201Cwindow\u201D, or specify the <code>events_order</code> option to an appropriate value (like <code>date_published</code>) so events from various sources are properly mixed in the resulted feed.</p><p>There is also an option <code>events_list_order</code> that only controls the order of events listed in the final output, without attempting to maintain a total order of received events. It has the same format as <code>events_order</code> and is defaulted to <code>[[&quot;{{_index_}}&quot;,&quot;number&quot;,true]]</code> so the selected events are listed in reverse order like most popular RSS feeds list their articles.</p><p><strong>Liquid Templating</strong></p>`,10),gn=t("In "),_n={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},mn=t("Liquid"),vn=t(" templating, the following variable is available:"),fn=s('<ul><li><code>events</code>: An array of events being output, sorted in the given order, up to <code>events_to_show</code> in number. For example, if source events contain a site title in the <code>site_title</code> key, you can refer to it in <code>template.title</code> by putting <code>{{events.first.site_title}}</code>.</li></ul><hr><h3 id="de-duplication-agent-\u6570\u636E\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#de-duplication-agent-\u6570\u636E\u53BB\u91CD" aria-hidden="true">#</a> De Duplication Agent - \u6570\u636E\u53BB\u91CD</h3><p><code>Creates events</code> <code>Receives events</code></p><p>De-duplication Agent \u5728\u63A5\u53D7\u6570\u636E\u540E\uFF0C\u4F1A\u81EA\u52A8\u6BD4\u5BF9\u5E76\u53BB\u9664\u91CD\u590D\u6570\u636E\u3002</p><p><code>property</code> the value that should be used to determine the uniqueness of the event (empty to use the whole payload)</p><p><code>lookback</code> amount of past Events to compare the value to (0 for unlimited)</p><p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><hr><h3 id="delay-agent-\u7F13\u51B2\u5B58\u50A8\u533A" tabindex="-1"><a class="header-anchor" href="#delay-agent-\u7F13\u51B2\u5B58\u50A8\u533A" aria-hidden="true">#</a> Delay Agent - \u7F13\u51B2\u5B58\u50A8\u533A</h3><p><code>Creates events</code> <code>Receives events</code></p><p>Delay Agent \u5B58\u50A8\u6536\u5230\u7684\u4E8B\u4EF6\uFF0C\u5E76\u6309\u8BA1\u5212\u53D1\u9001\u5B83\u4EEC\u7684\u526F\u672C\u3002\u5C06\u5176\u7528\u4F5C\u4E8B\u4EF6\u7684\u7F13\u51B2\u533A\u6216\u961F\u5217\u3002</p><p><code>max_events</code> should be set to the maximum number of events that you\u2019d like to hold in the buffer. When this number is reached, new events will either be ignored, or will displace the oldest event already in the buffer, depending on whether you set <code>keep</code> to <code>newest</code> or <code>oldest</code>.</p><p><code>expected_receive_period_in_days</code> is used to determine if the Agent is working. Set it to the maximum number of days that you anticipate passing without this Agent receiving an incoming Event.</p><p><code>max_emitted_events</code> is used to limit the number of the maximum events which should be created. If you omit this DelayAgent will create events for every event stored in the memory.</p><hr><h3 id="digest-agent-\u6458\u8981\u6C47\u603B-\u672A\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#digest-agent-\u6458\u8981\u6C47\u603B-\u672A\u7406\u89E3" aria-hidden="true">#</a> Digest Agent - \u6458\u8981\u6C47\u603B - \u672A\u7406\u89E3</h3><p><code>Creates events</code> <code>Receives events</code></p><p>Digest Agent \u6536\u96C6\u53D1\u9001\u7ED9\u5B83\u7684\u4EFB\u4F55\u4E8B\u4EF6\u5E76\u5C06\u5176\u4F5C\u4E3A\u5355\u4E2A\u4E8B\u4EF6\u53D1\u51FA\u3002</p>',19),kn=t("The resulting Event will have a payload message of "),bn=e("code",null,"message",-1),yn=t(". You can use liquid templating in the "),qn=e("code",null,"message",-1),wn=t(", have a look at the "),xn={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},An=t("Wiki"),Sn=t(" for details."),En=s('<p>Set <code>expected_receive_period_in_days</code> to the maximum amount of time that you\u2019d expect to pass between Events being received by this Agent.</p><p>If <code>retained_events</code> is set to 0 (the default), all received events are cleared after a digest is sent. Set <code>retained_events</code> to a value larger than 0 to keep a certain number of events around on a rolling basis to re-send in future digests.</p><p>For instance, say <code>retained_events</code> is set to 3 and the Agent has received Events <code>5</code>, <code>4</code>, and <code>3</code>. When a digest is sent, Events <code>5</code>, <code>4</code>, and <code>3</code> are retained for a future digest. After Event <code>6</code> is received, the next digest will contain Events <code>6</code>, <code>5</code>, and <code>4</code>.</p><hr><h3 id="dkt-clustering-agent-\u6570\u636E\u6316\u6398\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#dkt-clustering-agent-\u6570\u636E\u6316\u6398\u7B97\u6CD5" aria-hidden="true">#</a> Dkt Clustering Agent - \u6570\u636E\u6316\u6398\u7B97\u6CD5\uFF1F</h3>',5),Tn=e("code",null,"Creates events",-1),Cn=t(),Dn=e("code",null,"Receives events",-1),Ln=t(),Rn=e("code",null,"Consumes file pointer",-1),jn=t(),Fn=e("code",null,"Dry runs ",-1),Pn={href:"http://huginnio.herokuapp.com/agent_gems#huginn_dkt_curation_agents",target:"_blank",rel:"noopener noreferrer"},In=t("huginn_dkt_curation_agents"),On=t(" \u4F7F\u7528 DKT APIs\uFF0C\u5176\u4E2D\u542B\u6709\u591A\u4E2A agents\uFF0C\u5177\u4F53\u67E5\u770B\u4E0A\u65B9\u94FE\u63A5\u3002"),Nn=e("p",null,[t("The "),e("code",null,"DktClusteringAgent"),t(" clusters the input document collection. The document collection first has to be converted to a set of vectors. DktClusteringAgent \u4F1A\u5BF9\u8F93\u5165\u6587\u6863\u96C6\u5408\u8FDB\u884C\u805A\u7C7B\uFF0C\u6587\u6863\u96C6\u5408\u9996\u5148\u5FC5\u987B\u88AB\u8F6C\u6362\u6210\u4E00\u7EC4\u5411\u91CF\u3002\u8F93\u5165\u6587\u6863\u9700\u8981\u4E3A\u7279\u5B9A\u683C\u5F0F\uFF0CDktClusteringAgent \u4F1A\u5728\u8FD9\u4E2A\u8F93\u5165\u6570\u636E\u4E2D\u67E5\u627E\u96C6\u7FA4\u3002\u8F93\u5165\u4F1A\u5305\u542B\u67E5\u627E\u5230\u7684\u96C6\u7FA4\u6570\u91CF\u548C\u627E\u5230\u7684\u96C6\u7FA4\u7279\u5B9A\u503C\u7684\u4FE1\u606F\u3002")],-1),Bn=e("p",null,"The Agent expects the input in this particular format and then proceeds to find clusters in this input data. The output contains information on the number of clusters found and specific values for the found clusters.",-1),Hn=t("The Agent accepts all configuration options of the "),Un=e("code",null,"/e-clustering/generateClusters",-1),Mn=t(" endpoint as of september 2016, have a look at the "),Yn={href:"https://github.com/dkt-projekt/e-Clustering#e-clustering-1",target:"_blank",rel:"noopener noreferrer"},Vn=t("offical documentation"),Wn=t(" if you need additional information"),Jn=t("All Agent configuration options are interpolated using "),Gn={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},zn=t("Liquid"),Kn=t(" in the context of the received event."),Qn=e("p",null,[e("code",null,"url"),t(" allows to customize the endpoint of the API when hosting the DKT services elswhere.")],-1),Xn=e("code",null,"body",-1),$n=t(" use "),Zn={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},eo=t("Liquid"),to=t(" templating to specify the input .arff file. See http://www.cs.waikato.ac.nz/ml/weka/arff.html for an explanation of this format."),no=s("<p><code>language</code> language of the source data</p><p><code>algorithm</code>: the algorithm to be used during clustering. Currently EM and Kmeans are supported.</p><p><code>merge</code> set to <code>true</code> to retain the received payload and update it with the extracted result</p><p><code>result_key</code> when present the emitted Event data will be nested inside the specified key</p><p><strong>When receiving a file pointer:</strong></p><p><code>body</code> will be ignored and the contents of the received file will be send instead.</p>",6),oo=t("This agent can consume a \u2018file pointer\u2019 event from the following agents with no additional configuration: "),so=e("code",null,"FtpsiteAgent",-1),ao=t(", "),io=e("code",null,"LocalFileAgent",-1),co=t(", "),ro=e("code",null,"S3Agent",-1),po=t(". Read more about the concept in the "),lo={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},uo=t("wiki"),ho=t("."),go=e("hr",null,null,-1),_o=e("h3",{id:"dropbox-file-url",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#dropbox-file-url","aria-hidden":"true"},"#"),t(" Dropbox File Url")],-1),mo=e("p",null,[e("code",null,"Agent Creates"),t(),e("code",null,"events Receives events"),t(),e("code",null,"Dry runs"),t(),e("code",null,"Dropbox oauth2")],-1),vo=t("DropboxFileUrlAgent \u7528\u4E8E\u4F7F\u7528 Dropbox\u3002\u5B83\u9700\u8981\u4E00\u4E2A\u6587\u4EF6\u8DEF\u5F84\uFF08\u6216\u591A\u4E2A\u6587\u4EF6\u8DEF\u5F84\uFF09\uFF0C\u5E76\u901A\u8FC7"),fo={href:"https://www.dropbox.com/developers/core/docs#media",target:"_blank",rel:"noopener noreferrer"},ko=t("\u4E34\u65F6\u94FE\u63A5"),bo=t("\u6216"),yo={href:"https://www.dropbox.com/developers/core/docs#shares",target:"_blank",rel:"noopener noreferrer"},qo=t("\u6C38\u4E45\u94FE\u63A5"),wo=t("\u53D1\u9001\u4E8B\u4EF6\u3002"),xo=s(`<p>Include the <code>dropbox-api</code> and <code>omniauth-dropbox</code> gems in your <code>Gemfile</code> and set <code>DROPBOX_OAUTH_KEY</code> and <code>DROPBOX_OAUTH_SECRET</code> in your environment to use Dropbox Agents.</p><p>The incoming event payload needs to have a <code>paths</code> key, with a comma-separated list of files you want the URL for. For example:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token string">&quot;first/path, second/path&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TIP</strong>: You can use the <em>Event Formatting Agent</em> to format events before they come in. Here\u2019s an example configuration for formatting an event coming out of a <em>Dropbox Watch Agent</em>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{ added | map: &#39;path&#39; | join: &#39;,&#39; }}&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;matchers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;clean&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>An example of usage would be to watch a specific Dropbox directory (with the <em>DropboxWatchAgent</em>) and get the URLs for the added or updated files. You could then, for example, send emails with those links.</p><p>Set <code>link_type</code> to <code>&#39;temporary&#39;</code> if you want temporary links, or to <code>&#39;permanent&#39;</code> for permanent ones.</p><hr><h3 id="dropbox-watch-agent" tabindex="-1"><a class="header-anchor" href="#dropbox-watch-agent" aria-hidden="true">#</a> Dropbox Watch Agent</h3><p><code>Creates events</code> <code>Dropbox oauth2</code></p><p>Dropbox Watch Agent \u76D1\u6D4B\u7ED9\u5B9A\u503C<code>dir_to_watch</code>\u5E76\u53D1\u51FA\u68C0\u6D4B\u5230\u7684\u66F4\u6539\u7684\u4E8B\u4EF6\u3002</p><p>Include the <code>dropbox-api</code> and <code>omniauth-dropbox</code> gems in your <code>Gemfile</code> and set <code>DROPBOX_OAUTH_KEY</code> and <code>DROPBOX_OAUTH_SECRET</code> in your environment to use Dropbox Agents.</p><hr><h3 id="email-agent-\u90AE\u4EF6\u89E6\u53D1\u5668" tabindex="-1"><a class="header-anchor" href="#email-agent-\u90AE\u4EF6\u89E6\u53D1\u5668" aria-hidden="true">#</a> Email Agent - \u90AE\u4EF6\u89E6\u53D1\u5668\uFF1F</h3><p><code>Receives events</code></p><p>Email Agent \u6536\u5230\u4EFB\u4F55\u5185\u5BB9\u540E\uFF0C\u4F1A\u7ACB\u5373\u53D1\u9001\u90AE\u4EF6\u901A\u77E5\u3002</p>`,16),Ao=t("You can specify the email\u2019s subject line by providing a "),So=e("code",null,"subject",-1),Eo=t(" option, which can contain "),To={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Co=t("Liquid"),Do=t(" formatting. E.g., you could provide "),Lo=e("code",null,'"Huginn email"',-1),Ro=t(" to set a simple subject, or "),jo=e("code",null,"{{subject}}",-1),Fo=t(" to use the "),Po=e("code",null,"subject",-1),Io=t(" key from the incoming Event."),Oo=s('<p>By default, the email body will contain an optional <code>headline</code>, followed by a listing of the Events\u2019 keys.</p><p>You can customize the email body by including the optional <code>body</code> param. Like the <code>subject</code>, the <code>body</code> can be a simple message or a Liquid template. You could send only the Event\u2019s <code>some_text</code> field with a <code>body</code> set to <code>{{ some_text }}</code>. The body can contain simple HTML and will be sanitized. Note that when using <code>body</code>, it will be wrapped with <code>&lt;html&gt;</code> and <code>&lt;body&gt;</code> tags, so you do not need to add these yourself.</p><p>You can specify one or more <code>recipients</code> for the email, or skip the option in order to send the email to your account\u2019s default email address.</p><p>You can provide a <code>from</code> address for the email, or leave it blank to default to the value of <code>EMAIL_FROM_ADDRESS</code> (``).</p><p>You can provide a <code>content_type</code> for the email and specify <code>text/plain</code> or <code>text/html</code> to be sent. If you do not specify <code>content_type</code>, then the recipient email server will determine the correct rendering.</p><p>Set <code>expected_receive_period_in_days</code> to the maximum amount of time that you\u2019d expect to pass between Events being received by this Agent.</p><hr><h3 id="email-digest-agent-\u90AE\u4EF6\u6458\u8981" tabindex="-1"><a class="header-anchor" href="#email-digest-agent-\u90AE\u4EF6\u6458\u8981" aria-hidden="true">#</a> Email Digest Agent - \u90AE\u4EF6\u6458\u8981</h3><p><code>Receives events</code></p><p>Email Digest Agent \u6536\u96C6\u53D1\u9001\u7ED9\u5B83\u7684\u4EFB\u4F55\u4E8B\u4EF6\uFF0C\u5E76\u6309\u8BA1\u5212\u901A\u8FC7\u7535\u5B50\u90AE\u4EF6\u53D1\u9001\u3002\u4F7F\u7528\u4E8B\u4EF6\u7684\u6570\u76EE\u4E0E <code>Keep events</code> \u6709\u5173\uFF0C\u8FD9\u610F\u5473\u7740\u5982\u679C\u4E8B\u4EF6\u5728 Email Digest Agent \u8BA1\u5212\u8FD0\u884C\u4E4B\u524D\u5230\u671F\uFF0C\u5B83\u4EEC\u5C06\u4E0D\u4F1A\u51FA\u73B0\u5728\u7535\u5B50\u90AE\u4EF6\u4E2D\u3002</p><p>By default, the will have a <code>subject</code> and an optional <code>headline</code> before listing the Events. If the Events\u2019 payloads contain a <code>message</code>, that will be highlighted, otherwise everything in their payloads will be shown.</p><p>You can specify one or more <code>recipients</code> for the email, or skip the option in order to send the email to your account\u2019s default email address.</p><p>You can provide a <code>from</code> address for the email, or leave it blank to default to the value of <code>EMAIL_FROM_ADDRESS</code> (``).</p><p>You can provide a <code>content_type</code> for the email and specify <code>text/plain</code> or <code>text/html</code> to be sent. If you do not specify <code>content_type</code>, then the recipient email server will determine the correct rendering.</p><p>Set <code>expected_receive_period_in_days</code> to the maximum amount of time that you\u2019d expect to pass between Events being received by this Agent.</p><hr><h3 id="evernote-agent" tabindex="-1"><a class="header-anchor" href="#evernote-agent" aria-hidden="true">#</a> Evernote Agent</h3><p><code>Creates events</code> <code>Receives events</code> <code>Evernote</code></p><p>Evernote Agent \u4E0E\u4F60\u7684 Evernote \u8D26\u6237\u76F8\u8FDE\uFF0C\u65B0\u5EFA\u7B14\u8BB0\u3002</p>',19),No=t("Visit "),Bo={href:"https://dev.evernote.com/doc/",target:"_blank",rel:"noopener noreferrer"},Ho=t("Evernote"),Uo=t(" to set up an Evernote app and receive an api key and secret. Store these in the Evernote environment variables in the .env file. You will also need to create a "),Mo={href:"https://sandbox.evernote.com/Registration.action",target:"_blank",rel:"noopener noreferrer"},Yo=t("Sandbox"),Vo=t(" account to use during development."),Wo=t("Next, you\u2019ll need to authenticate with Evernote in the "),Jo={href:"http://huginnio.herokuapp.com/services",target:"_blank",rel:"noopener noreferrer"},Go=t("Services"),zo=t(" section."),Ko=s(`<p>Options:</p><ul><li><p><code>mode</code> - Two possible values:</p><ul><li><p><code>update</code> Based on events it receives, the agent will create notes or update notes with the same <code>title</code> and <code>notebook</code></p></li><li><p><code>read</code> On a schedule, it will generate events containing data for newly added or updated notes</p></li></ul></li><li><p><code>include_xhtml_content</code> - Set to <code>true</code> to include the content in ENML (Evernote Markup Language) of the note</p></li><li><p><code>note</code></p><ul><li><p>When <code>mode</code> is <code>update</code> the parameters of <code>note</code> are the attributes of the note to be added/edited. To edit a note, both <code>title</code> and <code>notebook</code> must be set.</p><p>For example, to add the tags \u2018comic\u2019 and \u2018CS\u2019 to a note titled \u2018xkcd Survey\u2019 in the notebook \u2018xkcd\u2019, use:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;notes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd Survey&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;notebook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tagNames&quot;</span><span class="token operator">:</span> <span class="token string">&quot;comic, CS&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If a note with the above title and notebook did note exist already, one would be created.</p></li><li><p>When <code>mode</code> is <code>read</code> the values are search parameters. Note: The <code>content</code> parameter is not used for searching. Setting <code>title</code> only filters notes whose titles contain <code>title</code> as a substring, not as the exact title.</p><p>For example, to find all notes with tag \u2018CS\u2019 in the notebook \u2018xkcd\u2019, use:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;notes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;notebook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;tagNames&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CS&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><hr><h3 id="freme-explore-agent-sparql-\u6570\u636E\u65AD\u70B9" tabindex="-1"><a class="header-anchor" href="#freme-explore-agent-sparql-\u6570\u636E\u65AD\u70B9" aria-hidden="true">#</a> Freme Explore Agent - SPARQL-\u6570\u636E\u65AD\u70B9\uFF1F</h3>`,4),Qo=e("code",null,"Creates events",-1),Xo=t(),$o=e("code",null,"Receives events",-1),Zo=t(),es=e("code",null,"Dry runs",-1),ts=t(),ns={href:"http://huginnio.herokuapp.com/agent_gems#huginn_freme_enrichment_agents",target:"_blank",rel:"noopener noreferrer"},os=t("huginn_freme_enrichment_agents"),ss=t(" \u4F7F\u7528 FREME APIs\uFF0C\u5176\u4E2D\u542B\u6709\u591A\u4E2A agents\uFF0C\u5177\u4F53\u67E5\u770B\u4E0A\u65B9\u94FE\u63A5\u3002"),as=e("p",null,[t("The "),e("code",null,"FremeExploreAgent"),t(" can retrieve description of a resource from a given endpoint. The endpoint can be SPARQL or Linked Data Fragments endpoint. FremeExploreAgent \u53EF\u4EE5\u68C0\u7D22\u7ED9\u5B9A\u7AEF\u70B9\u7684\u8D44\u6E90\u63CF\u8FF0\u3002\u7AEF\u70B9\u53EF\u4EE5\u662F SPARQL \u6216 Linked Data Fragments \u7AEF\u70B9\u3002")],-1),is=t("The Agent accepts all configuration options of the "),cs=e("code",null,"/e-link/explore",-1),ds=t(" endpoint as of September 2016, have a look at the "),rs={href:"http://api.freme-project.eu/doc/current/api-doc/full.html#!/e-Link/explore",target:"_blank",rel:"noopener noreferrer"},ps=t("offical documentation"),ls=t(" if you need additional information."),us=t("All Agent configuration options are interpolated using "),hs={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},gs=t("Liquid"),_s=t(" in the context of the received event."),ms=s("<p><code>base_url</code> allows to customize the API server when hosting the FREME services elswhere.</p><p><code>auth_token</code> can be set to access private filters, datasets, templates or pipelines (depending on the agent).</p><p><code>outformat</code> requested RDF serialization format of the output (required), CSV is only supported when using a filter.</p><p><code>resource</code> a URI of the resource which should be described (required).</p><p><code>endpoint</code> a URL of the endpoint which should be used to retrieve info about the resource.</p><p><code>endpoint_type</code> the type of the endpoint (required).</p>",6),vs=e("code",null,"filter",-1),fs=t(" allows to post-process the results using a pre-configured SPARQL filter. Check the "),ks={href:"http://api.freme-project.eu/doc/current/knowledge-base/freme-for-api-users/filtering.html",target:"_blank",rel:"noopener noreferrer"},bs=t("official documentation"),ys=t(" for details."),qs=s('<p><code>merge</code> set to <code>true</code> to retain the received payload and update it with the extracted result</p><p><code>result_key</code> when present the emitted Event data will be nested inside the specified key</p><hr><h3 id="ftpsite-agent" tabindex="-1"><a class="header-anchor" href="#ftpsite-agent" aria-hidden="true">#</a> Ftpsite Agent</h3><p><code>Creates events</code> <code>Receives events</code> <code>Emits file pointer</code></p><p>Ftp Site Agent \u68C0\u67E5 FTP \u7AD9\u70B9\uFF0C\u5E76\u6839\u636E\u76EE\u5F55\u4E2D\u65B0\u4E0A\u8F7D\u7684\u6587\u4EF6\u521B\u5EFA\u4E8B\u4EF6\u3002\u5F53\u63A5\u6536\u5230\u4E8B\u4EF6\u65F6\uFF0C\u5B83\u4F1A\u5728\u914D\u7F6E\u7684 FTP \u670D\u52A1\u5668\u4E0A\u521B\u5EFA\u6587\u4EF6\u3002</p><p><code>mode</code> must be present and either <code>read</code> or <code>write</code>, in <code>read</code> mode the agent checks the FTP site for changed files, with <code>write</code> it writes received events to a file on the server.</p><p><strong>Universal options</strong></p><p>Specify a <code>url</code> that represents a directory of an FTP site to watch, and a list of <code>patterns</code> to match against file names.</p><p>Login credentials can be included in <code>url</code> if authentication is required: <code>ftp://username:password@ftp.example.com/path</code>. Liquid formatting is supported as well: <code>ftp://{% credential ftp_credentials %}@ftp.example.com/</code></p><p>Optionally specify the encoding of the files you want to read/write in <code>force_encoding</code>, by default UTF-8 is used.</p><p><strong>Reading</strong></p><p>Only files with a last modification time later than the <code>after</code> value, if specifed, are emitted as event.</p><p><strong>Writing</strong></p><p>Specify the filename to use in <code>filename</code>, Liquid interpolation is possible to change the name per event.</p>',15),ws=t("Use "),xs={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},As=t("Liquid"),Ss=t(" templating in "),Es=e("code",null,"data",-1),Ts=t(" to specify which part of the received event should be written."),Cs=t("This agent only emits a \u2018file pointer\u2019, not the data inside the files, the following agents can consume the created events: "),Ds=e("code",null,"CsvAgent",-1),Ls=t(", "),Rs=e("code",null,"PostAgent",-1),js=t(", "),Fs=e("code",null,"ReadFileAgent",-1),Ps=t(". Read more about the concept in the "),Is={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},Os=t("wiki"),Ns=t(".");function Bs(a,Hs){const n=p("ExternalLinkIcon");return c(),d("div",null,[u,e("p",null,[t(r(a.created_at)+" \u4E3A\u81EA\u5E26\u6293\u53D6\u65F6\u95F4\uFF0CAgent \u8BBE\u7F6E\u4E2D\u7684\u7279\u6B8A\u5B57\u7B26",1),h,g,_,m]),v,e("p",null,[f,e("a",k,[b,o(n)]),y]),q,e("p",null,[w,e("a",x,[A,o(n)]),S]),E,e("p",null,[T,C,D,L,R,e("a",j,[F,o(n)]),P,I,O,N,B]),H,e("p",null,[U,M,Y,V,W,e("a",J,[G,o(n)])]),e("p",null,[z,e("a",K,[Q,o(n)]),X]),$,e("p",null,[Z,e("a",ee,[te,o(n)]),ne]),oe,se,e("p",null,[ae,ie,ce,de,re,e("a",pe,[le,o(n)])]),ue,he,e("ol",null,[e("li",null,[ge,e("a",_e,[me,o(n)])]),ve,fe,ke,be,ye]),qe,e("p",null,[we,xe,e("a",Ae,[Se,o(n)]),Ee]),Te,e("p",null,[Ce,De,e("a",Le,[Re,o(n)]),je]),Fe,e("p",null,[Pe,Ie,Oe,Ne,Be,He,e("a",Ue,[Me,o(n)]),Ye,Ve,We]),Je,e("p",null,[Ge,ze,e("a",Ke,[Qe,o(n)]),Xe,$e,Ze,et]),tt,e("p",null,[nt,e("a",ot,[st,o(n)]),at]),it,e("p",null,[ct,dt,rt,pt,lt,ut,ht,e("a",gt,[_t,o(n)]),mt]),e("p",null,[vt,e("a",ft,[kt,o(n)]),bt,yt,qt,wt,xt]),At,St,Et,e("p",null,[Tt,e("a",Ct,[Dt,o(n)]),Lt,Rt,jt]),Ft,e("ul",null,[Pt,It,e("li",null,[Ot,Nt,e("a",Bt,[Ht,o(n)]),Ut]),Mt,Yt,e("li",null,[Vt,Wt,e("a",Jt,[Gt,o(n)]),zt]),e("li",null,[Kt,Qt,e("a",Xt,[$t,o(n)]),Zt]),en,tn,e("li",null,[nn,on,e("a",sn,[an,o(n)]),cn,e("a",dn,[rn,o(n)]),pn,ln,un])]),hn,e("p",null,[gn,e("a",_n,[mn,o(n)]),vn]),fn,e("p",null,[kn,bn,yn,qn,wn,e("a",xn,[An,o(n)]),Sn]),En,e("p",null,[Tn,Cn,Dn,Ln,Rn,jn,Fn,e("a",Pn,[In,o(n)]),On]),Nn,Bn,e("p",null,[Hn,Un,Mn,e("a",Yn,[Vn,o(n)]),Wn]),e("p",null,[Jn,e("a",Gn,[zn,o(n)]),Kn]),Qn,e("p",null,[Xn,$n,e("a",Zn,[eo,o(n)]),to]),no,e("p",null,[oo,so,ao,io,co,ro,po,e("a",lo,[uo,o(n)]),ho]),go,_o,mo,e("p",null,[vo,e("a",fo,[ko,o(n)]),bo,e("a",yo,[qo,o(n)]),wo]),xo,e("p",null,[Ao,So,Eo,e("a",To,[Co,o(n)]),Do,Lo,Ro,jo,Fo,Po,Io]),Oo,e("p",null,[No,e("a",Bo,[Ho,o(n)]),Uo,e("a",Mo,[Yo,o(n)]),Vo]),e("p",null,[Wo,e("a",Jo,[Go,o(n)]),zo]),Ko,e("p",null,[Qo,Xo,$o,Zo,es,ts,e("a",ns,[os,o(n)]),ss]),as,e("p",null,[is,cs,ds,e("a",rs,[ps,o(n)]),ls]),e("p",null,[us,e("a",hs,[gs,o(n)]),_s]),ms,e("p",null,[vs,fs,e("a",ks,[bs,o(n)]),ys]),qs,e("p",null,[ws,e("a",xs,[As,o(n)]),Ss,Es,Ts]),e("p",null,[Cs,Ds,Ls,Rs,js,Fs,Ps,e("a",Is,[Os,o(n)]),Ns])])}var Ys=i(l,[["render",Bs],["__file","Huginn.html.vue"]]);export{Ys as default};
